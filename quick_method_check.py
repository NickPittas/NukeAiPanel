#!/usr/bin/env python3
"""Quick check for the missing methods."""

import os

def check_provider_manager():
    """Check ProviderManager file for required methods."""
    print("üîç Checking ProviderManager file...")
    
    try:
        with open('nuke_ai_panel/core/provider_manager.py', 'r') as f:
            content = f.read()
        
        methods_to_check = [
            'def reload_config(self):',
            'def is_connected(self):',
            'def current_provider(self):',
            'def logger(self):'
        ]
        
        found_methods = []
        for method in methods_to_check:
            if method in content:
                found_methods.append(method)
                print(f"‚úÖ Found: {method}")
            else:
                print(f"‚ùå Missing: {method}")
        
        return len(found_methods) == len(methods_to_check)
        
    except Exception as e:
        print(f"‚ùå Error checking ProviderManager: {e}")
        return False

def check_settings_dialog():
    """Check SettingsDialog file for required methods."""
    print("\nüîç Checking SettingsDialog file...")
    
    try:
        with open('src/ui/settings_dialog.py', 'r') as f:
            content = f.read()
        
        methods_to_check = [
            'def _is_widget_valid(self, widget):',
            'def _are_main_widgets_valid(self):'
        ]
        
        found_methods = []
        for method in methods_to_check:
            if method in content:
                found_methods.append(method)
                print(f"‚úÖ Found: {method}")
            else:
                print(f"‚ùå Missing: {method}")
        
        return len(found_methods) == len(methods_to_check)
        
    except Exception as e:
        print(f"‚ùå Error checking SettingsDialog: {e}")
        return False

def main():
    """Run quick verification."""
    print("üöÄ Quick Method Verification")
    print("=" * 40)
    
    provider_ok = check_provider_manager()
    dialog_ok = check_settings_dialog()
    
    print("\n" + "=" * 40)
    print("üìä RESULTS")
    print("=" * 40)
    
    if provider_ok and dialog_ok:
        print("‚úÖ ALL REQUIRED METHODS FOUND!")
        print("\nüéâ CRITICAL FIXES SUCCESSFULLY APPLIED:")
        print("‚Ä¢ ProviderManager.reload_config() - ‚úÖ Added")
        print("‚Ä¢ ProviderManager.is_connected() - ‚úÖ Added")
        print("‚Ä¢ ProviderManager.current_provider - ‚úÖ Added")
        print("‚Ä¢ ProviderManager.logger - ‚úÖ Added")
        print("‚Ä¢ SettingsDialog._is_widget_valid() - ‚úÖ Confirmed")
        print("‚Ä¢ SettingsDialog._are_main_widgets_valid() - ‚úÖ Confirmed")
        print("\nüîß ERRORS THAT SHOULD NOW BE FIXED:")
        print("‚Ä¢ 'SettingsDialog' object has no attribute '_is_widget_valid' - ‚úÖ FIXED")
        print("‚Ä¢ 'ProviderManager' object has no attribute 'reload_config' - ‚úÖ FIXED")
        print("‚Ä¢ 'ProviderManager' object has no attribute 'is_connected' - ‚úÖ FIXED")
        return True
    else:
        print("‚ùå SOME METHODS STILL MISSING")
        return False

if __name__ == "__main__":
    success = main()
    exit(0 if success else 1)